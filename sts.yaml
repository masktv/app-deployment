apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: masktv-mysql-statefulset
  labels:
    app: masktv-mysql
spec:
  serviceName: "masktv-mysql-service"
  replicas: 5
  selector:
    matchLabels:
      app: masktv-mysql
  template:
    metadata:
      labels:
        app: masktv-mysql
    spec:
      initContainers:
      - name: init-replication
        image: ...............
        command:
        - /bin/sh
        - -c
        - |
          if [ $(hostname) != "masktv-mysql-statefulset-0" ]; then
            MASTER_HOST=masktv-mysql-statefulset-0.masktv-mysql-statefulset.default.svc.cluster.local;
            MASTER_USER=${MYSQL_USER};  # Using the Secret variable
            MASTER_PASSWORD=${MYSQL_PASSWORD};  # Using the Secret variable

            # Wait for the master to be ready
            until mysql -h ${MASTER_HOST} -u ${MASTER_USER} -p${MASTER_PASSWORD} -e "status"; do
              echo "Waiting for master to be ready..."
              sleep 5;
            done
            
            # Get the master log file and position
            MASTER_LOG_FILE=$(mysql -h ${MASTER_HOST} -u ${MASTER_USER} -p${MASTER_PASSWORD} -e "SHOW MASTER STATUS\G" | grep 'File:' | awk '{print $2}')
            MASTER_LOG_POS=$(mysql -h ${MASTER_HOST} -u ${MASTER_USER} -p${MASTER_PASSWORD} -e "SHOW MASTER STATUS\G" | grep 'Position:' | awk '{print $2}')
            
            # Configure the slave
            mysql -u root -p${MYSQL_ROOT_PASSWORD} -e "
              CHANGE MASTER TO
              MASTER_HOST='${MASTER_HOST}',
              MASTER_USER='${MASTER_USER}',
              MASTER_PASSWORD='${MASTER_PASSWORD}',
              MASTER_LOG_FILE='${MASTER_LOG_FILE}',
              MASTER_LOG_POS=${MASTER_LOG_POS};
              START SLAVE;
            "
          fi
      containers:
      - name:  masktv-mysql-statefulset
        image: .....................
        ports:
          - containerPort: 3306
            name: mysql
            protocol: TCP
        resources: 
          requests: 
            cpu: 200m
            memory: 100Mi
        env:
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: database-secrets
                key: MYSQL_ROOT_PASSWORD
          - name: MYSQL_DATABASE
            valueFrom:
              secretKeyRef:
                name: database-secrets
                key: MYSQL_DATABASE
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                name: database-secrets
                key: MYSQL_USER
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: database-secrets
                key: MYSQL_PASSWORD
        volumeMounts:
        - name: masktv-mysql-pv
          mountPath: /var/lib/mysql
  volumeClaimTemplates:
  - metadata:
      name: masktv-mysql-pv
    spec:
      accessModes:
      resources:
        requests:
          storage: 2Gi
      storageClassName: efs-sc  # Use a storage class for EFS
